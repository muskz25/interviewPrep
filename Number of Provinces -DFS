class Solution {
    public int findCircleNum(int[][] isConnected) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        int N= isConnected.length;
        for(int i=0;i<N;i++){
            adj.add(new ArrayList<>());
        }

        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                if(isConnected[i][j]==1 && i!=j){
                    adj.get(j).add(i);
                    adj.get(i).add(j);
                }
            }
        }
        
        int vis[]=new int[N];
         int count=0;
        for(int i=0;i<N;i++){
            if(vis[i]==0){
                count++;
                dfs(i,vis,adj);
            }
        }
      return count;
    }

    public void dfs(int node,int vis[],ArrayList<ArrayList<Integer>> adj){
        
        vis[node]=1;

        for(int it : adj.get(node)){
            if(vis[it]==0){
                vis[it]=1;
                dfs(it,vis,adj);
            }
        }
    }
}
