class Solution {
    public void DFS(char[][] grid,int i,int j)
    {
        if(i < 0 || j<0 ||i>=grid.length || j>=grid[0].length||grid[i][j]!='O')
            return;
        grid[i][j] = 'P';
        DFS(grid,i+1,j);
        DFS(grid,i-1,j);
        DFS(grid,i,j-1);
        DFS(grid,i,j+1); 

    }
    public void solve(char[][] board) {
       for(int i = 0;i<board.length;i++)
       {
          if(board[i][0] == 'O')
          {
              DFS(board,i,0);
          }
          if(board[i][board[0].length-1] == 'O')
          {
              DFS(board,i,board[0].length-1);
          }
       }
       for(int i = 0;i<board[0].length;i++)
       {
          if(board[0][i] == 'O')
          {
              DFS(board,0,i);
          }
          if(board[board.length-1][i] == 'O')
          {
              DFS(board,board.length-1,i);
          }
       }
       for(int i = 0;i<board.length;i++)
       {
           for(int j = 0;j<board[0].length;j++)
           {
               if(board[i][j] == 'P')
               {
                   board[i][j] = 'O';
               }
               else if(board[i][j] == 'O')
               {
                   board[i][j] = 'X';
               }
           }
       }
       return; 
    }
}
